{"version":3,"sources":["App.js","index.js"],"names":["App","cancelToken","useState","data","setData","handleChange","e","a","query","target","value","cancel","axios","CancelToken","source","get","token","result","console","table","Container","maxWidth","className","Typography","variant","component","type","placeholder","onChange","login","src","avatar_url","bio","followers","following","twitter_username","location","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAuEeA,MAnEf,WACE,IAEIC,EAFJ,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACbC,EAAQF,EAAEG,OAAOC,MAEG,oBAAfT,GACTA,EAAYU,OAAO,8BAGrBV,EAAcW,IAAMC,YAAYC,SAPb,SASEF,IAAMG,IAAN,uCAA0CP,GAAS,CACtEP,YAAaA,EAAYe,QAVR,OASbC,EATa,OAYnBC,QAAQC,MAAMF,EAAOd,MACrBC,EAAQa,EAAOd,MAbI,2CAAH,sDA6BlB,OACE,cAACiB,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,OAAnC,SACE,gCACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,mCAGA,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,8CAGA,uBACA,uBACEC,KAAK,OACLJ,UAAU,UACVK,YAAY,iBACZC,SAAUvB,IAEZ,sBAAKiB,UAAU,MAAf,UACE,uBACCnB,GAAQ,6BAAKA,EAAK0B,QACnB,uBACC1B,GAAQ,qBAAK2B,IAAK3B,EAAK4B,aACvB5B,GAAQ,sCAASA,EAAK6B,OACtB7B,GAAQ,4CAAeA,EAAK8B,aAC5B9B,GAAQ,4CAAeA,EAAK+B,aAC5B/B,GAAQ,0CAAaA,EAAKgC,oBAC1BhC,GAAQ,2CAAcA,EAAKiC,qBC1DtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c629b4fc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Typography, Container, TextField } from \"@material-ui/core\";\n\nfunction App() {\n  const [data, setData] = useState(\"\");\n\n  let cancelToken;\n\n  // USING AXIOS METHOD\n  const handleChange = async (e) => {\n    const query = e.target.value;\n\n    if (typeof cancelToken != typeof undefined) {\n      cancelToken.cancel(\"Canceling the previous req\");\n    }\n\n    cancelToken = axios.CancelToken.source();\n\n    const result = await axios.get(`https://api.github.com/users/${query}`, {\n      cancelToken: cancelToken.token,\n    });\n    console.table(result.data);\n    setData(result.data);\n\n    // USING FETCH METHOD\n    // fetch(`https://api.github.com/users/${query}`)\n    //   .then((res) => {\n    //     return res.json();\n    //   })\n    //   .then((data) => {\n    //     console.log(data);\n    //     setData(data);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  };\n\n  return (\n    <Container maxWidth=\"sm\" className=\"main\">\n      <div>\n        <Typography variant=\"h2\" component=\"h2\">\n          Github Profile Finder\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          get your github profile info....\n        </Typography>\n        <br></br>\n        <input\n          type=\"text\"\n          className=\"myInput\"\n          placeholder=\"Enter username\"\n          onChange={handleChange}\n        />\n        <div className=\"res\">\n          <br />\n          {data && <h2>{data.login}</h2>}\n          <br />\n          {data && <img src={data.avatar_url}></img>}\n          {data && <p>Bio: {data.bio}</p>}\n          {data && <p>Followers: {data.followers}</p>}\n          {data && <p>Following: {data.following}</p>}\n          {data && <p>Twitter: {data.twitter_username}</p>}\n          {data && <p>Location: {data.location}</p>}\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}